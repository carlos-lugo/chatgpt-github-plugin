openapi: "3.0.0"
info:
  title: "GitHub API"
  description: "This API provides methods to fetch user repositories and file contents from GitHub using the GitHub API."
  version: "1.0.0"
servers:
  - url: "<your_AWS_API_Gateway_URL>"
paths:
  /:
    get:
      summary: "Home"
      operationId: getGreeting
      responses:
        "200":
          description: "Success"
          content:
            text/plain:
              schema:
                type: "string"
  /repositories/{username}:
    get:
      summary: "Get user repositories"
      operationId: getUserRepositories
      parameters:
        - name: "username"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"
        "500":
          description: "Error"
          content:
            text/plain:
              schema:
                type: "string"
  /repositories/{username}/{repo}/files/{filename}:
    get:
      summary: "Get specific file content"
      operationId: getFileContent
      parameters:
        - name: "username"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "repo"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "filename"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Success"
          content:
            text/plain:
              schema:
                type: "string"
        "500":
          description: "Error"
          content:
            text/plain:
              schema:
                type: "string"
  /repositories/{username}/{repo}/files:
    get:
      summary: "Get all files in a repository"
      operationId: getRepositoryFiles
      parameters:
        - name: "username"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "repo"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"
        "500":
          description: "Error"
          content:
            text/plain:
              schema:
                type: "string"
  /user/repos:
    get:
      summary: "Get User repositories (public and private)"
      operationId: getUserPrivateRepos
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "object"
        "403":
          description: "GitHub token not configured in AWS Lambda"
          content:
            text/plain:
              schema:
                type: "string"
        "500":
          description: "Error"
          content:
            text/plain:
              schema:
                type: "string"
  /.well-known/manifest.json:
    get:
      summary: "Get plugin information"
      operationId: getSwaggerThing
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  schema_version:
                    type: "string"
                  name_for_human:
                    type: "string"
                  name_for_model:
                    type: "string"
                  description_for_human:
                    type: "string"
                  description_for_model:
                    type: "string"
                  auth:
                    type: "object"
                    properties:
                      type:
                        type: "string"
                  api:
                    type: "object"
                    properties:
                      type:
                        type: "string"
                      url:
                        type: "string"
                      is_user_authenticated:
                        type: "boolean"
                  logo_url:
                    type: "string"
                  contact_email:
                    type: "string"
                  legal_info_url:
                    type: "string"
  /repositories/{username}/{repo}/branches:
    get:
      summary: "Get a list of repository branches"
      operationId: getRepositoryBranches
      parameters:
        - name: "username"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "repo"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"
        "500":
          description: "Error"
          content:
            text/plain:
              schema:
                type: "string"
  /repositories/{username}/{repo}/branches/{branch}/files:
    get:
      summary: "Get a list of files in a specific branch of a repository"
      operationId: getBranchFiles
      parameters:
        - name: "username"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "repo"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "branch"
          in: "path"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  type: "string"
        "500":
          description: "Error"
          content:
            text/plain:
              schema:
                type: "string"
  /repositories/{username}/{repo}/contents:
    get:
      summary: "Get content of a specific file in a specific branch of a repository"
      operationId: getBranchFileContent
      parameters:
        - name: "username"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "repo"
          in: "path"
          required: true
          schema:
            type: "string"
        - name: "filepath"
          in: "query"
          required: true
          schema:
            type: "string"
        - name: "branch"
          in: "query"
          required: true
          schema:
            type: "string"
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  content:
                    type: "string"
                  url:
                    type: "string"
        "500":
          description: "Error"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                  url:
                    type: "string"
